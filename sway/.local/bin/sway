#!/bin/bash

config_dual() {
    local -i n=0

    for output in /sys/class/drm/card?-*
    do
        read -r < "$output/enabled"
        if [[ "$REPLY" == "enabled" ]]; then
            (( n++ ))
        fi
    done

    if (( n == 1 )); then
        DIALOG_TIMEOUT=1 dialog --erase-on-exit --timeout 3 --defaultno --yesno "Start sway with dual screen config?" 0 0
    elif (( n == 2 )); then
        DIALOG_TIMEOUT=1 dialog --erase-on-exit --timeout 3 --yesno "Start sway with dual screen config?" 0 0
    elif (( n > 2 )); then
        echo "More than 2 monitors connected, defaulting to config for dual monitor" >&2
        sleep 1
        DIALOG_TIMEOUT=1 dialog --erase-on-exit --timeout 3 --yesno "Start sway with dual screen config?" 0 0
    else
        echo "No monitor connected!" >&2
        exit 2
    fi

    nodual=$?
    if (( nodual == 1 )); then
        export DUAL_CONFIGURED=1
    elif (( nodual == 0 )); then
        export DUAL_CONFIGURED=2
    else
        echo "Invalid choice!" >&2
        exit 1
    fi
}

select_card() {
    for card in /dev/dri/card*
    do
        if (( $(udevadm info -an "$card" | grep boot_vga | rev | cut -c 2) )); then
            export WLR_DRM_DEVICES="$card"
        fi
    done

    if [[ ! $WLR_DRM_DEVICES ]]; then
        echo "No available GPU found!" >&2
        exit 1
    fi
}

if [[ ! $WLR_DRM_DEVICES ]]; then
    select_card
fi

if ! (( DUAL_CONFIGURED )); then
    config_dual
fi

if [[ -t 1 ]]; then
    exec systemd-cat --identifier=sway "$0"
else
    unset JOURNAL_STREAM
fi

set -ex
envfiles=("$HOME/.config/sway/env"/*)
for envfile in "${envfiles[@]}"
do
    source "$envfile"
done
set +x

cd "$HOME"
export -n OLDPWD
if (( DUAL_CONFIGURED == 1 )); then
    exec /usr/bin/sway --unsupported-gpu
elif (( DUAL_CONFIGURED == 2 )); then
    exec /usr/bin/sway --unsupported-gpu --config "$HOME/.config/sway/config.dual"
else
    echo "Dual screen is not correctly configured!" >&2
    exit 2
fi
